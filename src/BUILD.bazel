package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle", "history_server")
load("@build_bazel_rules_nodejs//internal/web_package:web_package.bzl", "web_package")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_config", "ts_devserver")
load("@io_bazel_rules_sass//:defs.bzl", "sass_binary")

ts_config(
    name = "tsconfig-test",
    src = "tsconfig.spec.json",
    deps = ["//:tsconfig"],
)

ts_config(
    name = "tsconfig-app",
    src = "tsconfig.app.json",
    deps = ["//:tsconfig"],
)

ng_module(
    name = "src",
    srcs = glob(
        include = ["*.ts"],
        exclude = [
            "main.ts",
            "test.ts",
        ],
    ),
    deps = [
        "//src/app",
    ],
)

# We always strip these paths off the front of any assets we serve
_ROOT_DIRS = [
    "npm/node_modules/zone.js/dist",
    "npm/node_modules/@angular/material/prebuilt-themes",
    "npm/node_modules/@ngrx/store/bundles",
]

rollup_bundle(
    name = "bundle",
    # These Angular routes may be lazy-loaded at runtime.
    # So we tell Rollup that it can put them in separate JS chunks
    # (code-splitting) for faster application startup.
    # In the future, we could automatically gather these from statically
    # analyzing the Angular sources.
    additional_entry_points = [
        "src/hello-world/hello-world.module.ngfactory",
        "src/todos/todos.module.ngfactory",
    ],
    entry_point = "src/main.prod",
    deps = ["//src"],
)

web_package(
    name = "prodapp",
    additional_root_paths = _ROOT_DIRS + ["npm/node_modules/systemjs/dist"],
    assets = [
        "@npm//node_modules/zone.js:dist/zone.min.js",
        # We load system.js here as it is required in prodmode for code-splitting support.
        "@npm//node_modules/systemjs:dist/system.js",
        ":bundle.min.js",
    ],
    data = [
        ":bundle",
    ],
    index_html = "index.html",
)

history_server(
    name = "prodserver",
    data = [":prodapp"],
    templated_args = ["src/prodapp"],
)

ts_devserver(
    name = "devserver",
    port = 4200,
    # serve these files rooted at /
    additional_root_paths = _ROOT_DIRS,
    entry_module = "xlayers/src/main.dev",
    serving_path = "/bundle.min.js",
    static_files = [
        "@npm//node_modules/zone.js:dist/zone.min.js",
        "@npm//node_modules/tslib:tslib.js",
        "index.html",
    ],
    deps = [":src"],
)

ts_library(
    name = "test_lib",
    testonly = 1,
    srcs = glob(["**/*.spec.ts"]),
    deps = [
        ":src",
        "@angular//packages/core/testing",
        "@npm//@types",
    ],
)
